# app/safety.py
# -*- coding: utf-8 -*-
import re
from typing import Iterable

# –ë–∞–∑–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã (–æ—Å—Ç–∞–≤–ª—è—é —Ç–≤–æ–∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ + –¥–æ–ø.–≤–∞—Ä–∏–∞–Ω—Ç—ã)
CRISIS_KEYWORDS: Iterable[str] = [
    # —Ç–≤–æ–∏
    "–ø–æ–∫–æ–Ω—á—É —Å —Å–æ–±–æ–π", "—Å–∞–º–æ—É–±–∏—Ç—å—Å—è", "–Ω–µ —Ö–æ—á—É –∂–∏—Ç—å", "—Å—É–∏—Ü–∏–¥", "—É–±—å—é —Å–µ–±—è",
    "–Ω–∞–Ω–µ—Å—Ç–∏ —Å–µ–±–µ –≤—Ä–µ–¥", "—Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ",
    # —á–∞—Å—Ç—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã/—Å–∏–Ω–æ–Ω–∏–º—ã
    "—Ö–æ—á—É —É–º–µ—Ä–µ—Ç—å", "—É—Å—Ç–∞–ª –∂–∏—Ç—å", "–∂–∏—Ç—å –Ω–µ —Ö–æ—á—É", "—É–º–µ—Ä–µ—Ç—å —Ö–æ—á—É",
    "–ø–æ—Ä–µ–∑–∞—Ç—å –≤–µ–Ω—ã", "–ø–æ—Ä–µ–∑–∞—Ç—å—Å—è", "–Ω–∞–≤—Ä–µ–¥–∏—Ç—å —Å–µ–±–µ", "—Å–¥–µ–ª–∞—Ç—å —Å–µ–±–µ –±–æ–ª—å–Ω–æ",
    # –∞–Ω–≥–ª. –≤–∞—Ä–∏–∞–Ω—Ç—ã (–Ω–∞ —Å–ª—É—á–∞–π —Å–º–µ—à–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
    "suicide", "kill myself", "end my life", "i want to die", "self-harm", "hurt myself",
]

CRISIS_REPLY = (
    "–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —Ç–µ–±–µ —Å–µ–π—á–∞—Å —Ç–∞–∫ —Ç—è–∂–µ–ª–æ. –Ø –Ω–µ –∑–∞–º–µ–Ω—è—é —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞, "
    "–Ω–æ —Ö–æ—á—É –ø–æ–º–æ—á—å —Ç–µ–±–µ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∏—Å–∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –æ–ø–∞—Å–Ω–æ—Å—Ç–∏, "
    "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Å—å –∑–∞ —Å—Ä–æ—á–Ω–æ–π –ø–æ–º–æ—â—å—é: üìû —Å–ª—É–∂–±—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏/–≥–æ—Ä—è—á–∏–µ –ª–∏–Ω–∏–∏ –≤ —Ç–≤–æ—ë–º —Ä–µ–≥–∏–æ–Ω–µ.\n\n"
    "–ú–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ (–¥—ã—Ö–∞–Ω–∏–µ 60 —Å–µ–∫). "
    "–ï—Å–ª–∏ —Å–∫–∞–∂–µ—à—å, –ø–æ–¥—Å–∫–∞–∂—É –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏."
)

# –°–∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º –º—è–≥–∫–∏–µ —Ä–µ–≥—É–ª—è—Ä–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ (word-boundary –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ)
_patterns = [
    re.compile(r"\b" + re.escape(kw) + r"\b", re.IGNORECASE)
    if re.match(r"^[\w\s-]+$", kw, flags=re.IGNORECASE) else
    re.compile(re.escape(kw), re.IGNORECASE)
    for kw in CRISIS_KEYWORDS
]

def is_crisis(text: str) -> bool:
    """
    –ü—Ä–æ—Å—Ç–æ–π –¥–µ—Ç–µ–∫—Ç–æ—Ä –∫—Ä–∏–∑–∏—Å–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–Ω—É –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑.
    """
    if not text:
        return False
    t = text.strip()
    for p in _patterns:
        if p.search(t):
            return True
    return False

__all__ = ["CRISIS_KEYWORDS", "CRISIS_REPLY", "is_crisis"]
